> library(ggplot2)> library(cowplot)> library(randomForest)> library(caret)> library(mlbench)> > # To confirm that caret has been loaded, one can run the following code.> library(caret)> > loaded_packages  <- library()$results[,1]> > # confirm caret is loaded> "caret" %in% tolower(loaded_packages)[1] TRUE> > data <- read.csv('/Users/choyuching/Downloads/Corrupted amount modified_1.csv')> head(data)  status_type year_born gender native_province corruption_location local_official rankErin1         Fly 1970-1979   Male          Hainan              Hainan            Yes       102         Fly 1970-1979 Female           Hubei               Hunan             No        83         Fly 1950-1959   Male       Guangdong           Guangdong            Yes       104         Fly 1960-1969 Female           Anhui               Hebei             No       105         Fly 1950-1959   Male           Hebei               Hebei            Yes        86         Fly 1960-1969   Male         Beijing             Beijing            Yes       10          sentence_details monetary_gain corrupted_amount         sector connections_with_tigers1                     <NA>           Yes        0-100,000 social service                      No2 10-15 years imprisonment           Yes             <NA>     technology                      No3 10-15 years imprisonment           Yes             <NA>     technology                      No4 10-15 years imprisonment           Yes             <NA>        finance                      No5   1-5 years imprisonment           Yes             <NA>    real estate                      No6                Fine only           Yes             <NA>           CEHS                      No  oversea head_vice1      No         02     Yes         13     Yes         04     Yes         15     Yes         16     Yes         1> str(data)'data.frame':	2447 obs. of  14 variables: $ status_type            : chr  "Fly" "Fly" "Fly" "Fly" ... $ year_born              : chr  "1970-1979" "1970-1979" "1950-1959" "1960-1969" ... $ gender                 : chr  "Male" "Female" "Male" "Female" ... $ native_province        : chr  "Hainan" "Hubei" "Guangdong" "Anhui" ... $ corruption_location    : chr  "Hainan" "Hunan" "Guangdong" "Hebei" ... $ local_official         : chr  "Yes" "No" "Yes" "No" ... $ rankErin               : int  10 8 10 10 8 10 10 9 10 10 ... $ sentence_details       : chr  NA "10-15 years imprisonment" "10-15 years imprisonment" "10-15 years imprisonment" ... $ monetary_gain          : chr  "Yes" "Yes" "Yes" "Yes" ... $ corrupted_amount       : chr  "0-100,000" NA NA NA ... $ sector                 : chr  "social service" "technology" "technology" "finance" ... $ connections_with_tigers: chr  "No" "No" "No" "No" ... $ oversea                : chr  "No" "Yes" "Yes" "Yes" ... $ head_vice              : int  0 1 0 1 1 1 1 0 1 1 ...> > data$status_type<-as.factor(data$status_type)> data$year_born <-as.factor(data$year_born)> data$gender<-as.factor(data$gender)> data$native_province<-as.factor(data$native_province)> data$corruption_location<-as.factor(data$corruption_location)> data$local_official<-as.factor(data$local_official)> data$rankErin<-as.factor(data$rankErin)> data$sentence_details<-as.factor(data$sentence_details)> data$monetary_gain <-as.factor(data$monetary_gain)> data$corrupted_amount<-as.factor(data$corrupted_amount)> data$sector<-as.factor(data$sector)> data$connections_with_tigers<-as.factor(data$connections_with_tigers)> data$oversea<-as.factor(data$oversea)> data$head_vice<-as.factor(data$head_vice)> > > str(data)'data.frame':	2447 obs. of  14 variables: $ status_type            : Factor w/ 2 levels "Fly","Tiger": 1 1 1 1 1 1 1 1 1 1 ... $ year_born              : Factor w/ 6 levels "1930-1939","1940-1949",..: 5 5 3 4 3 4 4 3 3 4 ... $ gender                 : Factor w/ 2 levels "Female","Male": 2 1 2 1 2 2 2 1 2 2 ... $ native_province        : Factor w/ 31 levels "Anhui","Beijing",..: 9 13 6 1 10 2 30 25 25 6 ... $ corruption_location    : Factor w/ 34 levels "Anhui","Beijing",..: 9 15 6 10 10 2 33 9 9 6 ... $ local_official         : Factor w/ 2 levels "No","Yes": 2 1 2 1 2 2 2 1 1 2 ... $ rankErin               : Factor w/ 9 levels "2","3","4","5",..: 9 7 9 9 7 9 9 8 9 9 ... $ sentence_details       : Factor w/ 9 levels "1-5 years imprisonment",..: NA 2 2 2 1 7 5 5 8 2 ... $ monetary_gain          : Factor w/ 2 levels "No","Yes": 2 2 2 2 2 2 2 2 2 2 ... $ corrupted_amount       : Factor w/ 21 levels "0-100,000","1,000,000-2,000,000",..: 1 NA NA NA NA NA NA NA NA NA ... $ sector                 : Factor w/ 11 levels "agriculture",..: 9 10 10 4 8 2 4 2 4 4 ... $ connections_with_tigers: Factor w/ 2 levels "No","Yes": 1 1 1 1 1 1 1 1 1 1 ... $ oversea                : Factor w/ 2 levels "No","Yes": 1 2 2 2 2 2 2 1 2 2 ... $ head_vice              : Factor w/ 2 levels "0","1": 1 2 1 2 2 2 2 1 2 2 ...> > set.seed(200)> data.imputed <- rfImpute(status_type ~ ., data = data, iter=6)ntree      OOB      1      2  300:   2.25%  0.82% 14.57%ntree      OOB      1      2  300:   2.00%  0.82% 12.20%ntree      OOB      1      2  300:   2.00%  0.82% 12.20%ntree      OOB      1      2  300:   2.00%  0.78% 12.60%ntree      OOB      1      2  300:   1.88%  0.82% 11.02%ntree      OOB      1      2  300:   2.17%  0.96% 12.60%> > xtabs(~ monetary_gain + gender, data=data)             gendermonetary_gain Female Male          No       7  245          Yes     68 1074> xtabs(~ monetary_gain + status_type, data=data)             status_typemonetary_gain Fly Tiger          No  238    14          Yes 981   161> xtabs(~ monetary_gain + year_born, data=data)             year_bornmonetary_gain 1930-1939 1940-1949 1950-1959 1960-1969 1970-1979 1980-1989          No          0        12       101       105        16        18          Yes         1        80       480       445        94        42> xtabs(~ monetary_gain + native_province, data=data)             native_provincemonetary_gain Anhui Beijing Chongqing Fujian Gansu Guangdong Guangxi Guizhou Hainan Hebei          No     14       2         8      8     6        10       5       8      6    13          Yes    43      26        21     30    21        85      30      46     19    53             native_provincemonetary_gain Heilongjiang Henan Hubei Hunan Inner Mongolia Jiangsu Jiangxi Jilin Liaoning Ningxia          No             5    20    10    12              6      11       5    10        8       5          Yes           26    58    55    60             22      66      39    27       38      19             native_provincemonetary_gain Qinghai Shaanxi Shandong Shanghai Shanxi Sichuan Tianjin Tibet Xinjiang Yunnan          No        4       6       14        4      7      19       8     1        3      4          Yes       9      29       67       17     64      52      17    14       12     33             native_provincemonetary_gain Zhejiang          No        10          Yes       44> xtabs(~ monetary_gain + corruption_location, data=data)             corruption_locationmonetary_gain Anhui Beijing Chongqing Fujian Gansu Guangdong Guangxi Guizhou Hainan Hebei          No      4      17         4      8     3        24      11       8      3    15          Yes    39     102        16     37    20       113      29      40     31    35             corruption_locationmonetary_gain Heilongjiang Henan Hong Kong Hubei Hunan Inner Mongolia Iran Jiangsu Jiangxi Jilin          No             4    16         1    15     5              6    0       2       4     7          Yes           33    56         2    64    44             17    1      36      32    17             corruption_locationmonetary_gain Liaoning Macau Ningxia Qinghai Shaanxi Shandong Shanghai Shanxi Sichuan Tianjin Tibet          No        11     0       8       1       5        8        8      5      18      13     1          Yes       38     1      20       6      33       35       17     50      61      11     8             corruption_locationmonetary_gain Xinjiang Yunnan Zhejiang          No        11      3        3          Yes       32     36       30> xtabs(~ monetary_gain + local_official, data=data)             local_officialmonetary_gain  No Yes          No  132 120          Yes 579 563> xtabs(~ monetary_gain + rankErin, data=data)             rankErinmonetary_gain   2   3   4   5   6   7   8   9  10          No    0   4   7  45 101  32  19  25  19          Yes   1  13 121 257 390 164  65  81  50> xtabs(~ monetary_gain + sentence_details, data=data)             sentence_detailsmonetary_gain 1-5 years imprisonment 10-15 years imprisonment 15-20 years imprisonment          No                       0                        0                        0          Yes                     25                      238                       74             sentence_detailsmonetary_gain 20 -25 years imprisonment 5-10 years imprisonment Death sentence Fine only          No                          0                      32              0         0          Yes                        14                      35             32         1             sentence_detailsmonetary_gain Life imprisonment sentence_details          No                  6                0          Yes                51                1> xtabs(~ monetary_gain + sector, data=data)             sectormonetary_gain agriculture CEHS energy finance infrastructure manufacturing mining real estate          No            7   30      5      28              4             5     12           4          Yes          20  123     16     106             23            16     68          24             sectormonetary_gain social service technology transport          No             140         14         3          Yes            643         63        40> xtabs(~ monetary_gain + corrupted_amount, data=data)             corrupted_amountmonetary_gain 0-100,000 1,000,000-2,000,000 10,000,000-20,000,000 100,000-1,000,000          No          0                   0                     0                 0          Yes         4                  51                    68                91             corrupted_amountmonetary_gain 100,000,000-200,000,000 2,000,000-3,000,000 20,000,000-30,000,000 200000000+          No                        0                   0                     0          0          Yes                      11                  37                    26          7             corrupted_amountmonetary_gain 3,000,000-4,000,000 30,000,000-40,000,000 4,000,000-5,000,000 40,000,000-50,000,000          No                    0                     0                   0                     0          Yes                  35                     9                  29                    12             corrupted_amountmonetary_gain 5,000,000-6,000,000 50,000,000-60,000,000 6,000,000-7,000,000 60,000,000-70,000,000          No                    0                     0                   0                     0          Yes                  19                     4                  14                     5             corrupted_amountmonetary_gain 7,000,000-8,000,000 70,000,000-80,000,000 8,000,000-9,000,000 80,000,000-100,000,000          No                    0                     0                   0                      0          Yes                  12                     8                   9                      4             corrupted_amountmonetary_gain 9,000,000-10,000,000          No                     0          Yes                   14> xtabs(~ monetary_gain + connections_with_tigers, data=data)             connections_with_tigersmonetary_gain   No  Yes          No   248    4          Yes 1007  135> xtabs(~ monetary_gain + head_vice, data=data)             head_vicemonetary_gain   0   1          No  138 114          Yes 521 621> xtabs(~ monetary_gain + oversea, data=data)             overseamonetary_gain   No  Yes          No   247    5          Yes 1046   96> > > # let's start super simple and see if status_type (Tiger/Fly) is a good> ## predictor...> ## First, let's just look at the raw data...> xtabs(~ monetary_gain + status_type, data=data.imputed)             status_typemonetary_gain  Fly Tiger          No  1153    24          Yes 1040   230> > ###########> fitControll <- trainControl(method ="cv", number = 10, savePredictions= T)> mod_fitcv1 <- train(monetary_gain ~ status_type, data = data.imputed, method = "glm" ,family="binomial",trControl = fitControll)> > > summary(mod_fitcv1)Call:NULLDeviance Residuals:     Min       1Q   Median       3Q      Max  -2.1722  -1.1339   0.4455   1.2215   1.2215  Coefficients:                 Estimate Std. Error z value Pr(>|z|)    (Intercept)      -0.10315    0.04276  -2.412   0.0159 *  status_typeTiger  2.36317    0.21870  10.806   <2e-16 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.7  on 2446  degrees of freedomResidual deviance: 3193.2  on 2445  degrees of freedomAIC: 3197.2Number of Fisher Scoring iterations: 4> mod_fitcv1Generalized Linear Model 2447 samples   1 predictor   2 classes: 'No', 'Yes' No pre-processingResampling: Cross-Validated (10 fold) Summary of sample sizes: 2202, 2202, 2203, 2203, 2203, 2202, ... Resampling results:  Accuracy   Kappa      0.5651723  0.1558279> > caret::confusionMatrix(table((mod_fitcv1$pred)$pred, (mod_fitcv1$pred)$obs))Confusion Matrix and Statistics             No  Yes  No  1153 1040  Yes   24  230                                                         Accuracy : 0.5652                           95% CI : (0.5453, 0.5849)    No Information Rate : 0.519               P-Value [Acc > NIR] : 2.559e-06                                                                   Kappa : 0.1558                                                     Mcnemar's Test P-Value : < 2.2e-16                                                             Sensitivity : 0.9796                      Specificity : 0.1811                   Pos Pred Value : 0.5258                   Neg Pred Value : 0.9055                       Prevalence : 0.4810                   Detection Rate : 0.4712             Detection Prevalence : 0.8962                Balanced Accuracy : 0.5804                                                           'Positive' Class : No                                                        > > #ggplot(mod_fitcv1)> # Error in ggplot.train(mod_fitcv1) : > #There are no tuning parameters for this model.> > ## We can plot the data...> logistic <- glm(monetary_gain ~ status_type, data=data.imputed, family="binomial")> summary(logistic)Call:glm(formula = monetary_gain ~ status_type, family = "binomial",     data = data.imputed)Deviance Residuals:     Min       1Q   Median       3Q      Max  -2.1722  -1.1339   0.4455   1.2215   1.2215  Coefficients:                 Estimate Std. Error z value Pr(>|z|)    (Intercept)      -0.10315    0.04276  -2.412   0.0159 *  status_typeTiger  2.36317    0.21870  10.806   <2e-16 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.7  on 2446  degrees of freedomResidual deviance: 3193.2  on 2445  degrees of freedomAIC: 3197.2Number of Fisher Scoring iterations: 4> > predicted.data <- data.frame(+   probability.of.monetary_gain=logistic$fitted.values,+   status_type=data.imputed$status_type)> > ggplot(data=predicted.data, aes(x=status_type, y=probability.of.monetary_gain)) ++   geom_point(aes(color=status_type), size=5) ++   xlab("status_type") ++   ylab("Predicted probability of having monetary_gain")> > ggsave("/Users/choyuching/Downloads/1224 0200_vs status_types.png")Saving 8.87 x 6.83 in image> > ## Since there are only two probabilities (one for tigers and one for flies),> ## we can use a table to summarize the predicted probabilities.> xtabs(~ probability.of.monetary_gain + status_type, data=predicted.data)                            status_typeprobability.of.monetary_gain  Fly Tiger           0.474236206110347 2193     0           0.90551180663162     0   254> > > > ## Since there are only two probabilities (one for tigers and one for flies),> ## we can use a table to summarize the predicted probabilities.> xtabs(~ probability.of.monetary_gain + status_type, data=predicted.data)                            status_typeprobability.of.monetary_gain  Fly Tiger           0.474236206110347 2193     0           0.90551180663162     0   254> > #####################################> ##> ## Now we will use all of the data available to predict monetary_gain> ##> #####################################> > fitControll <- trainControl(method ="cv", number = 10, savePredictions= T)> mod_fitcv2 <- train(monetary_gain ~ .+                     , data = data.imputed, method = "glm" ,family="binomial",trControl = fitControll)There were 15 warnings (use warnings() to see them)> > > #summary(mod_fitcv2)> #mod_fitcv2> > #caret::confusionMatrix(table((mod_fitcv2$pred)$pred, (mod_fitcv2$pred)$obs))> > #ggplot(mod_fitcv2)> # Error in ggplot.train(mod_fitcv2) : > #There are no tuning parameters for this model.> > > ## now we can visualizing the data> > logistic <- glm(monetary_gain ~ ., data=data.imputed, family="binomial")Warning message:glm.fit: fitted probabilities numerically 0 or 1 occurred > summary(logistic)Call:glm(formula = monetary_gain ~ ., family = "binomial", data = data.imputed)Deviance Residuals:     Min       1Q   Median       3Q      Max  -3.3099  -0.2101   0.0000   0.0549   3.2581  Coefficients:                                            Estimate Std. Error z value Pr(>|z|)    (Intercept)                                3.173e+01  1.521e+04   0.002 0.998335    status_typeTiger                          -1.123e+00  7.408e-01  -1.516 0.129640    year_born1940-1949                        -9.227e+00  1.075e+04  -0.001 0.999315    year_born1950-1959                        -9.253e+00  1.075e+04  -0.001 0.999313    year_born1960-1969                        -9.469e+00  1.075e+04  -0.001 0.999297    year_born1970-1979                        -8.818e+00  1.075e+04  -0.001 0.999346    year_born1980-1989                        -9.429e+00  1.075e+04  -0.001 0.999300    genderMale                                -4.406e-01  5.090e-01  -0.866 0.386659    native_provinceBeijing                     2.791e+00  1.130e+00   2.471 0.013464 *  native_provinceChongqing                   9.070e-01  1.033e+00   0.878 0.379793    native_provinceFujian                      2.836e+00  1.135e+00   2.499 0.012451 *  native_provinceGansu                       2.354e+00  1.072e+00   2.195 0.028141 *  native_provinceGuangdong                   2.307e+00  9.010e-01   2.560 0.010458 *  native_provinceGuangxi                     1.188e+00  1.331e+00   0.892 0.372252    native_provinceGuizhou                     1.985e+00  9.581e-01   2.072 0.038264 *  native_provinceHainan                      1.958e+00  1.172e+00   1.670 0.094858 .  native_provinceHebei                       2.398e+00  8.949e-01   2.679 0.007376 ** native_provinceHeilongjiang                1.660e-01  1.266e+00   0.131 0.895636    native_provinceHenan                       1.878e+00  8.559e-01   2.194 0.028230 *  native_provinceHubei                       1.446e+00  9.504e-01   1.522 0.128037    native_provinceHunan                       2.042e+00  9.404e-01   2.172 0.029856 *  native_provinceInner Mongolia              1.908e+00  1.075e+00   1.775 0.075945 .  native_provinceJiangsu                     1.895e+00  8.373e-01   2.264 0.023588 *  native_provinceJiangxi                     1.948e+00  9.803e-01   1.987 0.046873 *  native_provinceJilin                       4.142e-01  9.355e-01   0.443 0.657961    native_provinceLiaoning                    2.061e+00  1.002e+00   2.057 0.039657 *  native_provinceNingxia                     3.334e+00  1.046e+00   3.187 0.001436 ** native_provinceQinghai                     2.398e+00  1.279e+00   1.875 0.060816 .  native_provinceShaanxi                     2.160e+00  9.221e-01   2.342 0.019170 *  native_provinceShandong                   -2.356e-01  9.231e-01  -0.255 0.798572    native_provinceShanghai                   -8.701e-01  1.378e+00  -0.631 0.527828    native_provinceShanxi                      2.007e+00  9.239e-01   2.173 0.029800 *  native_provinceSichuan                     2.647e+00  8.769e-01   3.019 0.002535 ** native_provinceTianjin                     1.587e+00  1.197e+00   1.326 0.184936    native_provinceTibet                       1.264e+00  1.128e+00   1.121 0.262215    native_provinceXinjiang                    2.519e+00  1.099e+00   2.292 0.021896 *  native_provinceYunnan                      1.920e+00  1.042e+00   1.843 0.065382 .  native_provinceZhejiang                    8.447e-01  1.036e+00   0.815 0.415076    corruption_locationBeijing                -2.976e+00  9.905e-01  -3.004 0.002662 ** corruption_locationChongqing              -1.909e+00  1.192e+00  -1.602 0.109120    corruption_locationFujian                 -2.899e+00  1.210e+00  -2.397 0.016531 *  corruption_locationGansu                  -2.764e+00  1.390e+00  -1.988 0.046820 *  corruption_locationGuangdong              -1.816e+00  9.497e-01  -1.912 0.055872 .  corruption_locationGuangxi                -3.679e+00  1.416e+00  -2.599 0.009359 ** corruption_locationGuizhou                -9.552e-01  1.051e+00  -0.909 0.363334    corruption_locationHainan                 -8.335e-01  1.120e+00  -0.744 0.456653    corruption_locationHebei                  -4.798e+00  1.307e+00  -3.669 0.000243 ***corruption_locationHeilongjiang           -1.935e+00  1.180e+00  -1.639 0.101196    corruption_locationHenan                  -2.391e+00  1.072e+00  -2.231 0.025655 *  corruption_locationHong Kong              -1.862e+00  2.064e+00  -0.902 0.367046    corruption_locationHubei                  -1.832e+00  1.038e+00  -1.765 0.077588 .  corruption_locationHunan                  -1.644e+00  1.109e+00  -1.483 0.137972    corruption_locationInner Mongolia         -2.115e+00  1.132e+00  -1.868 0.061778 .  corruption_locationIran                    1.457e+01  1.075e+04   0.001 0.998919    corruption_locationJiangsu                -2.489e+00  1.229e+00  -2.026 0.042775 *  corruption_locationJiangxi                -2.500e+00  1.270e+00  -1.969 0.048942 *  corruption_locationJilin                  -3.906e+00  1.411e+00  -2.769 0.005623 ** corruption_locationLiaoning               -2.471e+00  1.021e+00  -2.421 0.015482 *  corruption_locationMacau                   2.115e+01  1.075e+04   0.002 0.998431    corruption_locationNingxia                -2.159e+00  1.202e+00  -1.796 0.072544 .  corruption_locationQinghai                -2.561e+00  1.710e+00  -1.498 0.134166    corruption_locationShaanxi                -2.670e+00  1.325e+00  -2.015 0.043939 *  corruption_locationShandong               -4.584e+00  1.258e+00  -3.645 0.000268 ***corruption_locationShanghai               -2.480e+00  1.318e+00  -1.881 0.059907 .  corruption_locationShanxi                 -1.916e+00  1.069e+00  -1.793 0.072993 .  corruption_locationSichuan                -2.300e+00  1.014e+00  -2.267 0.023367 *  corruption_locationTianjin                -2.495e+00  1.293e+00  -1.929 0.053724 .  corruption_locationTibet                  -2.673e+00  1.438e+00  -1.858 0.063160 .  corruption_locationXinjiang               -2.193e+00  1.014e+00  -2.162 0.030631 *  corruption_locationYunnan                 -1.656e+00  1.147e+00  -1.444 0.148636    corruption_locationZhejiang               -7.863e-01  1.339e+00  -0.587 0.557028    local_officialYes                         -6.314e-01  3.143e-01  -2.009 0.044502 *  rankErin3                                 -1.842e+01  1.075e+04  -0.002 0.998633    rankErin4                                 -1.579e+01  1.075e+04  -0.001 0.998829    rankErin5                                 -1.981e+01  1.075e+04  -0.002 0.998530    rankErin6                                 -2.075e+01  1.075e+04  -0.002 0.998460    rankErin7                                 -2.061e+01  1.075e+04  -0.002 0.998471    rankErin8                                 -2.137e+01  1.075e+04  -0.002 0.998414    rankErin9                                 -2.182e+01  1.075e+04  -0.002 0.998381    rankErin10                                -2.211e+01  1.075e+04  -0.002 0.998360    sentence_details10-15 years imprisonment   5.374e+00  1.261e+00   4.262 2.03e-05 ***sentence_details15-20 years imprisonment   1.883e+01  9.491e+02   0.020 0.984172    sentence_details20 -25 years imprisonment  1.495e-01  8.471e-01   0.176 0.859960    sentence_details5-10 years imprisonment   -5.349e+00  5.275e-01 -10.140  < 2e-16 ***sentence_detailsDeath sentence             4.482e+00  7.500e-01   5.977 2.28e-09 ***sentence_detailsFine only                 -1.590e+00  6.981e-01  -2.277 0.022757 *  sentence_detailsLife imprisonment         -2.010e+00  6.888e-01  -2.919 0.003515 ** sentence_detailssentence_details           7.773e-01  1.246e+00   0.624 0.532703    corrupted_amount1,000,000-2,000,000        5.048e+00  1.373e+00   3.676 0.000237 ***corrupted_amount10,000,000-20,000,000      1.878e+01  9.499e+02   0.020 0.984229    corrupted_amount100,000-1,000,000          9.860e-01  4.787e-01   2.060 0.039429 *  corrupted_amount100,000,000-200,000,000    6.469e-01  1.058e+00   0.612 0.540742    corrupted_amount2,000,000-3,000,000        3.242e+00  8.577e-01   3.780 0.000157 ***corrupted_amount20,000,000-30,000,000      2.146e+01  1.528e+03   0.014 0.988795    corrupted_amount200000000+                 7.800e-01  1.072e+00   0.727 0.467008    corrupted_amount3,000,000-4,000,000        2.395e+00  1.544e+00   1.551 0.120798    corrupted_amount30,000,000-40,000,000      5.005e+00  1.235e+00   4.052 5.07e-05 ***corrupted_amount4,000,000-5,000,000        5.013e+00  1.503e+00   3.335 0.000854 ***corrupted_amount40,000,000-50,000,000      3.398e+00  1.119e+00   3.037 0.002390 ** corrupted_amount5,000,000-6,000,000       -9.528e-01  1.148e+00  -0.830 0.406374    corrupted_amount50,000,000-60,000,000      8.170e-01  7.077e-01   1.154 0.248347    corrupted_amount6,000,000-7,000,000        2.140e+00  9.788e-01   2.186 0.028821 *  corrupted_amount60,000,000-70,000,000      2.077e+00  1.434e+00   1.448 0.147514    corrupted_amount7,000,000-8,000,000        1.349e+00  6.115e-01   2.206 0.027406 *  corrupted_amount70,000,000-80,000,000      2.230e+01  2.323e+03   0.010 0.992340    corrupted_amount8,000,000-9,000,000       -3.047e+00  1.843e+00  -1.653 0.098263 .  corrupted_amount80,000,000-100,000,000     5.020e-02  9.255e-01   0.054 0.956748    corrupted_amount9,000,000-10,000,000       2.116e+01  2.206e+03   0.010 0.992345    sectorCEHS                                 1.560e-01  9.338e-01   0.167 0.867361    sectorenergy                              -5.489e-02  1.345e+00  -0.041 0.967444    sectorfinance                             -1.605e+00  1.001e+00  -1.602 0.109071    sectorinfrastructure                       4.892e-01  1.258e+00   0.389 0.697416    sectormanufacturing                       -9.625e-01  1.316e+00  -0.731 0.464483    sectormining                               3.625e-01  1.028e+00   0.353 0.724309    sectorreal estate                          2.387e-01  1.285e+00   0.186 0.852580    sectorsocial service                       5.055e-01  8.898e-01   0.568 0.570014    sectortechnology                          -7.852e-01  9.883e-01  -0.794 0.426943    sectortransport                           -6.336e-01  1.162e+00  -0.545 0.585505    connections_with_tigersYes                 2.385e-01  7.145e-01   0.334 0.738540    overseaYes                                 3.327e+00  7.557e-01   4.403 1.07e-05 ***head_vice1                                 4.678e-01  2.572e-01   1.819 0.068972 .  ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.73  on 2446  degrees of freedomResidual deviance:  600.11  on 2326  degrees of freedomAIC: 842.11Number of Fisher Scoring iterations: 18> > predicted.data <- data.frame(+   probability.of.monetary_gain=logistic$fitted.values,+   monetary_gain=data.imputed$monetary_gain)> > predicted.data <- predicted.data[+   order(predicted.data$probability.of.monetary_gain, decreasing=FALSE),]> > predicted.data$rank <- 1:nrow(predicted.data)> > > > ## Lastly, we can plot the predicted probabilities for each sample having> ## heart disease and color by whether or not they actually had heart disease> ggplot(data=predicted.data, aes(x=rank, y=probability.of.monetary_gain  )) ++   geom_point(aes(color=monetary_gain), alpha=1, shape=4, stroke=1) ++   xlab("Index of the observation") ++   ylab("Probability of having monetary_gain")> ggsave("/Users/choyuching/Downloads/Caret_1.png")Saving 8.87 x 6.83 in image> > > #Comparsion> mod_fitcv2Generalized Linear Model 2447 samples  13 predictor   2 classes: 'No', 'Yes' No pre-processingResampling: Cross-Validated (10 fold) Summary of sample sizes: 2202, 2202, 2202, 2202, 2203, 2202, ... Resampling results:  Accuracy   Kappa      0.9395115  0.8789824> summary(mod_fitcv2)Call:NULLDeviance Residuals:     Min       1Q   Median       3Q      Max  -3.3099  -0.2101   0.0000   0.0549   3.2581  Coefficients:                                              Estimate Std. Error z value Pr(>|z|)    (Intercept)                                  3.173e+01  1.521e+04   0.002 0.998335    status_typeTiger                            -1.123e+00  7.408e-01  -1.516 0.129640    `year_born1940-1949`                        -9.227e+00  1.075e+04  -0.001 0.999315    `year_born1950-1959`                        -9.253e+00  1.075e+04  -0.001 0.999313    `year_born1960-1969`                        -9.469e+00  1.075e+04  -0.001 0.999297    `year_born1970-1979`                        -8.818e+00  1.075e+04  -0.001 0.999346    `year_born1980-1989`                        -9.429e+00  1.075e+04  -0.001 0.999300    genderMale                                  -4.406e-01  5.090e-01  -0.866 0.386659    native_provinceBeijing                       2.791e+00  1.130e+00   2.471 0.013464 *  native_provinceChongqing                     9.070e-01  1.033e+00   0.878 0.379793    native_provinceFujian                        2.836e+00  1.135e+00   2.499 0.012451 *  native_provinceGansu                         2.354e+00  1.072e+00   2.195 0.028141 *  native_provinceGuangdong                     2.307e+00  9.010e-01   2.560 0.010458 *  native_provinceGuangxi                       1.188e+00  1.331e+00   0.892 0.372252    native_provinceGuizhou                       1.985e+00  9.581e-01   2.072 0.038264 *  native_provinceHainan                        1.958e+00  1.172e+00   1.670 0.094858 .  native_provinceHebei                         2.398e+00  8.949e-01   2.679 0.007376 ** native_provinceHeilongjiang                  1.660e-01  1.266e+00   0.131 0.895636    native_provinceHenan                         1.878e+00  8.559e-01   2.194 0.028230 *  native_provinceHubei                         1.446e+00  9.504e-01   1.522 0.128037    native_provinceHunan                         2.042e+00  9.404e-01   2.172 0.029856 *  `native_provinceInner Mongolia`              1.908e+00  1.075e+00   1.775 0.075945 .  native_provinceJiangsu                       1.895e+00  8.373e-01   2.264 0.023588 *  native_provinceJiangxi                       1.948e+00  9.803e-01   1.987 0.046873 *  native_provinceJilin                         4.142e-01  9.355e-01   0.443 0.657961    native_provinceLiaoning                      2.061e+00  1.002e+00   2.057 0.039657 *  native_provinceNingxia                       3.334e+00  1.046e+00   3.187 0.001436 ** native_provinceQinghai                       2.398e+00  1.279e+00   1.875 0.060816 .  native_provinceShaanxi                       2.160e+00  9.221e-01   2.342 0.019170 *  native_provinceShandong                     -2.356e-01  9.231e-01  -0.255 0.798572    native_provinceShanghai                     -8.701e-01  1.378e+00  -0.631 0.527828    native_provinceShanxi                        2.007e+00  9.239e-01   2.173 0.029800 *  native_provinceSichuan                       2.647e+00  8.769e-01   3.019 0.002535 ** native_provinceTianjin                       1.587e+00  1.197e+00   1.326 0.184936    native_provinceTibet                         1.264e+00  1.128e+00   1.121 0.262215    native_provinceXinjiang                      2.519e+00  1.099e+00   2.292 0.021896 *  native_provinceYunnan                        1.920e+00  1.042e+00   1.843 0.065382 .  native_provinceZhejiang                      8.447e-01  1.036e+00   0.815 0.415076    corruption_locationBeijing                  -2.976e+00  9.905e-01  -3.004 0.002662 ** corruption_locationChongqing                -1.909e+00  1.192e+00  -1.602 0.109120    corruption_locationFujian                   -2.899e+00  1.210e+00  -2.397 0.016531 *  corruption_locationGansu                    -2.764e+00  1.390e+00  -1.988 0.046820 *  corruption_locationGuangdong                -1.816e+00  9.497e-01  -1.912 0.055872 .  corruption_locationGuangxi                  -3.679e+00  1.416e+00  -2.599 0.009359 ** corruption_locationGuizhou                  -9.552e-01  1.051e+00  -0.909 0.363334    corruption_locationHainan                   -8.335e-01  1.120e+00  -0.744 0.456653    corruption_locationHebei                    -4.798e+00  1.307e+00  -3.669 0.000243 ***corruption_locationHeilongjiang             -1.935e+00  1.180e+00  -1.639 0.101196    corruption_locationHenan                    -2.391e+00  1.072e+00  -2.231 0.025655 *  `corruption_locationHong Kong`              -1.862e+00  2.064e+00  -0.902 0.367046    corruption_locationHubei                    -1.832e+00  1.038e+00  -1.765 0.077588 .  corruption_locationHunan                    -1.644e+00  1.109e+00  -1.483 0.137972    `corruption_locationInner Mongolia`         -2.115e+00  1.132e+00  -1.868 0.061778 .  corruption_locationIran                      1.457e+01  1.075e+04   0.001 0.998919    corruption_locationJiangsu                  -2.489e+00  1.229e+00  -2.026 0.042775 *  corruption_locationJiangxi                  -2.500e+00  1.270e+00  -1.969 0.048942 *  corruption_locationJilin                    -3.906e+00  1.411e+00  -2.769 0.005623 ** corruption_locationLiaoning                 -2.471e+00  1.021e+00  -2.421 0.015482 *  corruption_locationMacau                     2.115e+01  1.075e+04   0.002 0.998431    corruption_locationNingxia                  -2.159e+00  1.202e+00  -1.796 0.072544 .  corruption_locationQinghai                  -2.561e+00  1.710e+00  -1.498 0.134166    corruption_locationShaanxi                  -2.670e+00  1.325e+00  -2.015 0.043939 *  corruption_locationShandong                 -4.584e+00  1.258e+00  -3.645 0.000268 ***corruption_locationShanghai                 -2.480e+00  1.318e+00  -1.881 0.059907 .  corruption_locationShanxi                   -1.916e+00  1.069e+00  -1.793 0.072993 .  corruption_locationSichuan                  -2.300e+00  1.014e+00  -2.267 0.023367 *  corruption_locationTianjin                  -2.495e+00  1.293e+00  -1.929 0.053724 .  corruption_locationTibet                    -2.673e+00  1.438e+00  -1.858 0.063160 .  corruption_locationXinjiang                 -2.193e+00  1.014e+00  -2.162 0.030631 *  corruption_locationYunnan                   -1.656e+00  1.147e+00  -1.444 0.148636    corruption_locationZhejiang                 -7.863e-01  1.339e+00  -0.587 0.557028    local_officialYes                           -6.314e-01  3.143e-01  -2.009 0.044502 *  rankErin3                                   -1.842e+01  1.075e+04  -0.002 0.998633    rankErin4                                   -1.579e+01  1.075e+04  -0.001 0.998829    rankErin5                                   -1.981e+01  1.075e+04  -0.002 0.998530    rankErin6                                   -2.075e+01  1.075e+04  -0.002 0.998460    rankErin7                                   -2.061e+01  1.075e+04  -0.002 0.998471    rankErin8                                   -2.137e+01  1.075e+04  -0.002 0.998414    rankErin9                                   -2.182e+01  1.075e+04  -0.002 0.998381    rankErin10                                  -2.211e+01  1.075e+04  -0.002 0.998360    `sentence_details10-15 years imprisonment`   5.374e+00  1.261e+00   4.262 2.03e-05 ***`sentence_details15-20 years imprisonment`   1.883e+01  9.491e+02   0.020 0.984172    `sentence_details20 -25 years imprisonment`  1.495e-01  8.471e-01   0.176 0.859960    `sentence_details5-10 years imprisonment`   -5.349e+00  5.275e-01 -10.140  < 2e-16 ***`sentence_detailsDeath sentence`             4.482e+00  7.500e-01   5.977 2.28e-09 ***`sentence_detailsFine only`                 -1.590e+00  6.981e-01  -2.277 0.022757 *  `sentence_detailsLife imprisonment`         -2.010e+00  6.888e-01  -2.919 0.003515 ** sentence_detailssentence_details             7.773e-01  1.246e+00   0.624 0.532703    `corrupted_amount1,000,000-2,000,000`        5.048e+00  1.373e+00   3.676 0.000237 ***`corrupted_amount10,000,000-20,000,000`      1.878e+01  9.499e+02   0.020 0.984229    `corrupted_amount100,000-1,000,000`          9.860e-01  4.787e-01   2.060 0.039429 *  `corrupted_amount100,000,000-200,000,000`    6.469e-01  1.058e+00   0.612 0.540742    `corrupted_amount2,000,000-3,000,000`        3.242e+00  8.577e-01   3.780 0.000157 ***`corrupted_amount20,000,000-30,000,000`      2.146e+01  1.528e+03   0.014 0.988795    `corrupted_amount200000000+`                 7.800e-01  1.072e+00   0.727 0.467008    `corrupted_amount3,000,000-4,000,000`        2.395e+00  1.544e+00   1.551 0.120798    `corrupted_amount30,000,000-40,000,000`      5.005e+00  1.235e+00   4.052 5.07e-05 ***`corrupted_amount4,000,000-5,000,000`        5.013e+00  1.503e+00   3.335 0.000854 ***`corrupted_amount40,000,000-50,000,000`      3.398e+00  1.119e+00   3.037 0.002390 ** `corrupted_amount5,000,000-6,000,000`       -9.528e-01  1.148e+00  -0.830 0.406374    `corrupted_amount50,000,000-60,000,000`      8.170e-01  7.077e-01   1.154 0.248347    `corrupted_amount6,000,000-7,000,000`        2.140e+00  9.788e-01   2.186 0.028821 *  `corrupted_amount60,000,000-70,000,000`      2.077e+00  1.434e+00   1.448 0.147514    `corrupted_amount7,000,000-8,000,000`        1.349e+00  6.115e-01   2.206 0.027406 *  `corrupted_amount70,000,000-80,000,000`      2.230e+01  2.323e+03   0.010 0.992340    `corrupted_amount8,000,000-9,000,000`       -3.047e+00  1.843e+00  -1.653 0.098263 .  `corrupted_amount80,000,000-100,000,000`     5.020e-02  9.255e-01   0.054 0.956748    `corrupted_amount9,000,000-10,000,000`       2.116e+01  2.206e+03   0.010 0.992345    sectorCEHS                                   1.560e-01  9.338e-01   0.167 0.867361    sectorenergy                                -5.489e-02  1.345e+00  -0.041 0.967444    sectorfinance                               -1.605e+00  1.001e+00  -1.602 0.109071    sectorinfrastructure                         4.892e-01  1.258e+00   0.389 0.697416    sectormanufacturing                         -9.625e-01  1.316e+00  -0.731 0.464483    sectormining                                 3.625e-01  1.028e+00   0.353 0.724309    `sectorreal estate`                          2.387e-01  1.285e+00   0.186 0.852580    `sectorsocial service`                       5.055e-01  8.898e-01   0.568 0.570014    sectortechnology                            -7.852e-01  9.883e-01  -0.794 0.426943    sectortransport                             -6.336e-01  1.162e+00  -0.545 0.585505    connections_with_tigersYes                   2.385e-01  7.145e-01   0.334 0.738540    overseaYes                                   3.327e+00  7.557e-01   4.403 1.07e-05 ***head_vice1                                   4.678e-01  2.572e-01   1.819 0.068972 .  ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.73  on 2446  degrees of freedomResidual deviance:  600.11  on 2326  degrees of freedomAIC: 842.11Number of Fisher Scoring iterations: 18> caret::confusionMatrix(table((mod_fitcv2$pred)$pred, (mod_fitcv2$pred)$obs))Confusion Matrix and Statistics             No  Yes  No  1121   92  Yes   56 1178                                                         Accuracy : 0.9395                           95% CI : (0.9293, 0.9486)    No Information Rate : 0.519               P-Value [Acc > NIR] : < 2.2e-16                                                                   Kappa : 0.879                                                      Mcnemar's Test P-Value : 0.004015                                                              Sensitivity : 0.9524                      Specificity : 0.9276                   Pos Pred Value : 0.9242                   Neg Pred Value : 0.9546                       Prevalence : 0.4810                   Detection Rate : 0.4581             Detection Prevalence : 0.4957                Balanced Accuracy : 0.9400                                                           'Positive' Class : No                                                        > > > ## now we can visualizing the data using proposed model> > logistic2 <- glm(monetary_gain ~  native_province + corruption_location + local_official + connections_with_tigers + head_vice, data=data.imputed, family="binomial")> summary(logistic2)Call:glm(formula = monetary_gain ~ native_province + corruption_location +     local_official + connections_with_tigers + head_vice, family = "binomial",     data = data.imputed)Deviance Residuals:     Min       1Q   Median       3Q      Max  -2.5008  -1.1139   0.3504   1.1252   1.8927  Coefficients:                                   Estimate Std. Error z value Pr(>|z|)    (Intercept)                        -0.03073    0.26623  -0.115 0.908098    native_provinceBeijing              1.09134    0.44131   2.473 0.013401 *  native_provinceChongqing            0.22112    0.40723   0.543 0.587148    native_provinceFujian               0.52591    0.41073   1.280 0.200392    native_provinceGansu                0.23983    0.40857   0.587 0.557212    native_provinceGuangdong            0.74276    0.33542   2.214 0.026799 *  native_provinceGuangxi              1.08778    0.43803   2.483 0.013015 *  native_provinceGuizhou              0.86701    0.36769   2.358 0.018376 *  native_provinceHainan               0.22230    0.42970   0.517 0.604916    native_provinceHebei                0.81140    0.34629   2.343 0.019124 *  native_provinceHeilongjiang         0.64028    0.41149   1.556 0.119708    native_provinceHenan                0.18477    0.34961   0.528 0.597154    native_provinceHubei                0.33525    0.35191   0.953 0.340770    native_provinceHunan                0.57051    0.36049   1.583 0.113516    native_provinceInner Mongolia       0.61667    0.41638   1.481 0.138598    native_provinceJiangsu              0.69636    0.34727   2.005 0.044940 *  native_provinceJiangxi              0.70196    0.38967   1.801 0.071634 .  native_provinceJilin                0.17017    0.38255   0.445 0.656444    native_provinceLiaoning             0.84515    0.35979   2.349 0.018821 *  native_provinceNingxia              0.46481    0.45074   1.031 0.302438    native_provinceQinghai              0.23285    0.51162   0.455 0.649012    native_provinceShaanxi              0.51048    0.38428   1.328 0.184051    native_provinceShandong             0.76358    0.32024   2.384 0.017105 *  native_provinceShanghai             0.46793    0.43250   1.082 0.279286    native_provinceShanxi               0.53775    0.35608   1.510 0.130994    native_provinceSichuan              0.24851    0.34774   0.715 0.474833    native_provinceTianjin              1.00657    0.44456   2.264 0.023561 *  native_provinceTibet                0.72860    0.50954   1.430 0.152744    native_provinceXinjiang             0.33285    0.44478   0.748 0.454252    native_provinceYunnan               0.74539    0.41325   1.804 0.071274 .  native_provinceZhejiang             0.26159    0.37058   0.706 0.480260    corruption_locationBeijing         -0.27232    0.34294  -0.794 0.427149    corruption_locationChongqing       -1.27519    0.46586  -2.737 0.006195 ** corruption_locationFujian          -0.21774    0.43133  -0.505 0.613693    corruption_locationGansu           -0.24487    0.47044  -0.521 0.602713    corruption_locationGuangdong       -0.76104    0.35184  -2.163 0.030540 *  corruption_locationGuangxi         -0.80240    0.44711  -1.795 0.072710 .  corruption_locationGuizhou         -0.40785    0.40356  -1.011 0.312190    corruption_locationHainan          -0.05220    0.45283  -0.115 0.908225    corruption_locationHebei           -1.17389    0.40245  -2.917 0.003535 ** corruption_locationHeilongjiang    -0.78753    0.42014  -1.874 0.060872 .  corruption_locationHenan           -0.25858    0.39827  -0.649 0.516172    corruption_locationHong Kong       -0.65479    1.39447  -0.470 0.638667    corruption_locationHubei           -0.45188    0.37725  -1.198 0.230991    corruption_locationHunan           -0.68215    0.41407  -1.647 0.099469 .  corruption_locationInner Mongolia  -0.83701    0.43025  -1.945 0.051726 .  corruption_locationIran            12.02969  324.74400   0.037 0.970450    corruption_locationJiangsu         -0.38228    0.43810  -0.873 0.382882    corruption_locationJiangxi         -0.66035    0.44603  -1.481 0.138734    corruption_locationJilin           -1.44981    0.42873  -3.382 0.000721 ***corruption_locationLiaoning        -1.11172    0.38367  -2.898 0.003761 ** corruption_locationMacau           11.98922  324.74395   0.037 0.970550    corruption_locationNingxia         -0.90963    0.46619  -1.951 0.051031 .  corruption_locationQinghai         -0.99378    0.63046  -1.576 0.114961    corruption_locationShaanxi         -0.47382    0.41613  -1.139 0.254858    corruption_locationShandong        -0.88275    0.39640  -2.227 0.025952 *  corruption_locationShanghai        -0.84083    0.45240  -1.859 0.063084 .  corruption_locationShanxi          -0.44166    0.41557  -1.063 0.287881    corruption_locationSichuan         -0.52577    0.38155  -1.378 0.168209    corruption_locationTianjin         -1.83956    0.46740  -3.936 8.29e-05 ***corruption_locationTibet            0.17348    0.68999   0.251 0.801486    corruption_locationXinjiang        -1.22543    0.37483  -3.269 0.001078 ** corruption_locationYunnan          -0.20233    0.44900  -0.451 0.652263    corruption_locationZhejiang         0.32948    0.48619   0.678 0.497974    local_officialYes                  -0.15974    0.09728  -1.642 0.100568    connections_with_tigersYes          2.33553    0.29820   7.832 4.79e-15 ***head_vice1                          0.34599    0.08675   3.988 6.66e-05 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.7  on 2446  degrees of freedomResidual deviance: 3130.7  on 2380  degrees of freedomAIC: 3264.7Number of Fisher Scoring iterations: 11> > > predicted.data <- data.frame(+   probability.of.monetary_gain=logistic2$fitted.values,+   monetary_gain=data.imputed$monetary_gain)> > predicted.data <- predicted.data[+   order(predicted.data$probability.of.monetary_gain, decreasing=FALSE),]> > predicted.data$rank <- 1:nrow(predicted.data)> > ## Lastly, we can plot the predicted probabilities for each sample having> ## heart disease and color by whether or not they actually had heart disease> ggplot(data=predicted.data, aes(x=rank, y=probability.of.monetary_gain  )) ++   geom_point(aes(color=monetary_gain), alpha=1, shape=4, stroke=1) ++   xlab("Index of the observation") ++   ylab("Probability of having monetary_gain")> ggsave("/Users/choyuching/Downloads/Caret_proposed.png")Saving 8.87 x 6.83 in image> > #Stat for pruposed model using 6 predictors.> fitControll <- trainControl(method ="cv", number = 10, savePredictions= T)> mod_fitcv3 <- train(monetary_gain ~  native_province + corruption_location + local_official + connections_with_tigers + oversea + head_vice+                     , data = data.imputed, method = "glm" ,family="binomial",trControl = fitControll)Warning messages:1: In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :  prediction from a rank-deficient fit may be misleading2: In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :  prediction from a rank-deficient fit may be misleading> > mod_fitcv3Generalized Linear Model 2447 samples   6 predictor   2 classes: 'No', 'Yes' No pre-processingResampling: Cross-Validated (10 fold) Summary of sample sizes: 2202, 2202, 2203, 2202, 2202, 2202, ... Resampling results:  Accuracy   Kappa      0.5864587  0.1759438> summary(mod_fitcv3)Call:NULLDeviance Residuals:     Min       1Q   Median       3Q      Max  -2.6942  -1.0861   0.3324   1.1398   1.8794  Coefficients:                                     Estimate Std. Error z value Pr(>|z|)    (Intercept)                           0.01960    0.26957   0.073 0.942029    native_provinceBeijing                1.05907    0.45389   2.333 0.019633 *  native_provinceChongqing              0.36346    0.41218   0.882 0.377877    native_provinceFujian                 0.57551    0.41575   1.384 0.166273    native_provinceGansu                  0.35470    0.41241   0.860 0.389752    native_provinceGuangdong              0.86305    0.34355   2.512 0.011999 *  native_provinceGuangxi                1.13711    0.44722   2.543 0.011004 *  native_provinceGuizhou                0.98181    0.37172   2.641 0.008259 ** native_provinceHainan                 0.36138    0.43399   0.833 0.405024    native_provinceHebei                  0.91636    0.35322   2.594 0.009478 ** native_provinceHeilongjiang           0.66891    0.41995   1.593 0.111196    native_provinceHenan                  0.25273    0.35538   0.711 0.476986    native_provinceHubei                  0.43697    0.35853   1.219 0.222928    native_provinceHunan                  0.68903    0.36661   1.879 0.060186 .  `native_provinceInner Mongolia`       0.75516    0.42139   1.792 0.073118 .  native_provinceJiangsu                0.72663    0.35367   2.055 0.039923 *  native_provinceJiangxi                0.84145    0.39468   2.132 0.033007 *  native_provinceJilin                  0.13355    0.39326   0.340 0.734168    native_provinceLiaoning               0.80573    0.36785   2.190 0.028498 *  native_provinceNingxia                0.61476    0.45450   1.353 0.176178    native_provinceQinghai                0.34524    0.51460   0.671 0.502294    native_provinceShaanxi                0.66008    0.38852   1.699 0.089323 .  native_provinceShandong               0.81341    0.32688   2.488 0.012833 *  native_provinceShanghai               0.24001    0.45777   0.524 0.600074    native_provinceShanxi                 0.64222    0.36139   1.777 0.075553 .  native_provinceSichuan                0.36101    0.35284   1.023 0.306237    native_provinceTianjin                1.06210    0.45211   2.349 0.018813 *  native_provinceTibet                  0.86168    0.51250   1.681 0.092703 .  native_provinceXinjiang               0.46436    0.44772   1.037 0.299662    native_provinceYunnan                 0.86529    0.42035   2.058 0.039544 *  native_provinceZhejiang               0.39195    0.37653   1.041 0.297906    corruption_locationBeijing           -0.36751    0.34929  -1.052 0.292731    corruption_locationChongqing         -1.37800    0.47332  -2.911 0.003598 ** corruption_locationFujian            -0.32383    0.43616  -0.742 0.457807    corruption_locationGansu             -0.28822    0.47503  -0.607 0.544018    corruption_locationGuangdong         -0.94126    0.36023  -2.613 0.008977 ** corruption_locationGuangxi           -0.86348    0.45321  -1.905 0.056747 .  corruption_locationGuizhou           -0.47553    0.40796  -1.166 0.243765    corruption_locationHainan            -0.19576    0.45882  -0.427 0.669624    corruption_locationHebei             -1.37251    0.41277  -3.325 0.000884 ***corruption_locationHeilongjiang      -0.82142    0.42609  -1.928 0.053880 .  corruption_locationHenan             -0.36373    0.40488  -0.898 0.368992    `corruption_locationHong Kong`       -0.72229    1.38993  -0.520 0.603300    corruption_locationHubei             -0.58430    0.38395  -1.522 0.128062    corruption_locationHunan             -0.75961    0.42050  -1.806 0.070845 .  `corruption_locationInner Mongolia`  -0.93391    0.43696  -2.137 0.032575 *  corruption_locationIran              11.95063  324.74401   0.037 0.970644    corruption_locationJiangsu           -0.50573    0.44607  -1.134 0.256894    corruption_locationJiangxi           -0.75520    0.45262  -1.669 0.095211 .  corruption_locationJilin             -1.49333    0.43621  -3.423 0.000618 ***corruption_locationLiaoning          -1.22834    0.39066  -3.144 0.001665 ** corruption_locationMacau             11.92215  324.74396   0.037 0.970714    corruption_locationNingxia           -0.99343    0.46995  -2.114 0.034524 *  corruption_locationQinghai           -1.03214    0.63457  -1.627 0.103842    corruption_locationShaanxi           -0.55188    0.42189  -1.308 0.190839    corruption_locationShandong          -1.02840    0.40526  -2.538 0.011160 *  corruption_locationShanghai          -1.12268    0.46799  -2.399 0.016442 *  corruption_locationShanxi            -0.49044    0.42082  -1.165 0.243847    corruption_locationSichuan           -0.63675    0.38742  -1.644 0.100266    corruption_locationTianjin           -1.95077    0.47695  -4.090 4.31e-05 ***corruption_locationTibet              0.09824    0.69314   0.142 0.887293    corruption_locationXinjiang          -1.28883    0.38006  -3.391 0.000696 ***corruption_locationYunnan            -0.37952    0.45886  -0.827 0.408185    corruption_locationZhejiang          -0.03426    0.49970  -0.069 0.945341    local_officialYes                    -0.23826    0.09918  -2.402 0.016296 *  connections_with_tigersYes            2.40294    0.29826   8.056 7.85e-16 ***overseaYes                            2.32259    0.33253   6.985 2.86e-12 ***head_vice1                            0.23236    0.08844   2.628 0.008601 ** ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1(Dispersion parameter for binomial family taken to be 1)    Null deviance: 3388.7  on 2446  degrees of freedomResidual deviance: 3053.8  on 2379  degrees of freedomAIC: 3189.8Number of Fisher Scoring iterations: 11> caret::confusionMatrix(table((mod_fitcv3$pred)$pred, (mod_fitcv3$pred)$obs))Confusion Matrix and Statistics            No Yes  No  753 588  Yes 424 682                                                        Accuracy : 0.5864                          95% CI : (0.5666, 0.606)    No Information Rate : 0.519              P-Value [Acc > NIR] : 1.221e-11                                                                 Kappa : 0.1759                                                   Mcnemar's Test P-Value : 2.993e-07                                                           Sensitivity : 0.6398                     Specificity : 0.5370                  Pos Pred Value : 0.5615                  Neg Pred Value : 0.6166                      Prevalence : 0.4810                  Detection Rate : 0.3077            Detection Prevalence : 0.5480               Balanced Accuracy : 0.5884                                                         'Positive' Class : No   